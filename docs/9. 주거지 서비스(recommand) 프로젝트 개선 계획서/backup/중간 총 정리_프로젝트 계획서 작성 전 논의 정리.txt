1. 프로젝트 초기 상태 및 문제 인식
초기 

WhereHouse 프로젝트는 사용자의 전/월세 예산과 생활 안전/편의 비중을 입력받아 상위 3개 지역구를 추천하는 시스템이었습니다. 그러나 핵심 추천 로직이 사용자가 선택한 안전 점수와 편의 점수 중 어느 것이 더 높은지에 따라 단순히 정렬 기준만 바꾸는 이분법적 구조를 가지고 있었습니다. 이로 인해 사용자의 복합적인 요구를 반영하기 어렵고 추천 근거가 부족하다는 명확한 한계가 있었습니다.



기반이 된 R 분석 역시 '검거율'을 종속 변수로 사용했으나, 모델의 설명력(Adjusted R²)이 **50.97%**에 그쳐 참고용으로만 가능한 수준이었습니다.

2. 프로젝트 개선 기획
이러한 한계를 극복하기 위해 **"실거래가 데이터 기반의 지역별 시세 변동성 분석 및 추천 시스템"**으로 프로젝트를 고도화하는 개선 계획이 수립되었습니다.

핵심 개선 방향

정교한 비즈니스 로직 도입 (2단계 폴백 시스템): 사용자의 조건에 맞는 매물이 충분할 때와 부족할 때를 나누어 대응하는 하이브리드 접근법이 채택되었습니다.



1단계 (매물 충분 시): 사용자가 선택한 우선순위(가격, 안전, 평수)에 따라 가중치를 다르게 적용하여 최적의 매물을 추천합니다.



2단계 (매물 부족 시): 사용자의 우선순위에 따라 **차별적인 양보 전략(경계 확장)**을 적용하여 실용적인 대안을 제시합니다. 예를 들어, 안전 우선 사용자는 안전 점수는 유지하되 예산이나 지역을 확장하고 , 가격 우선 사용자는 예산을 먼저 유연하게 조정한 뒤 다른 조건을 완화합니다.





고도화된 기술 스택 도입 (Elasticsearch): 기존 RDBMS의 한계를 넘어, 대용량 데이터의 실시간 검색, 통계 분석, 지리 공간 쿼리를 효율적으로 처리하기 위해 Elasticsearch 도입이 제안되었습니다. 이는 "핀 포인트" 기반의 미시적 분석을 가능하게 합니다.


신뢰도 높은 안전 점수 시스템 재설계: 단일 지표인 '검거율'의 한계를 인식하고, 범죄 예방, 대응, 환경적 안전 요소를 종합한 '복합 안전성 점수 시스템'을 설계했습니다. 여기에는 CCTV 밀도, 파출소까지의 거리, 상권 활성도 등 다각적인 지표가 포함됩니다.



3. 기술적 깊이와 현실적 구현 방안
개선 계획의 기술적 깊이가 현재 지식 수준과 차이가 있다는 점이 확인되었습니다. 특히 Elasticsearch와 같은 새로운 기술 스택에 대한 생소함이 가장 큰 장벽으로 파악되었습니다.

이에 따라, 전체 계획을 한 번에 구현하기보다는 점진적으로 접근하는 현실적인 실행 방안이 논의되었습니다.

단계별 실행 계획
데이터 파이프라인 구축: 가장 먼저 외부 API(e.g., 국토교통부)에서 데이터를 가져와 Elasticsearch에 저장하는 foundational 단계에 집중합니다.

기본 쿼리 및 집계 학습: Elasticsearch에 저장된 데이터를 조회하고, "구별 평균 거래가"와 같은 간단한 통계를 내보며 기술에 익숙해지는 단계를 거칩니다.

기존 분석 결과(R) 통합: R 분석으로 도출된 '구별 검거율' 점수를 Elasticsearch 데이터의 한 필드로 통합하여, 거시적 분석과 미시적 분석을 결합합니다.

이러한 접근법은 기존 R 분석 결과를 폐기하는 것이 아니라, 더 큰 시스템의 핵심 구성요소로 활용하여 프로젝트의 완성도를 높이는 전략입니다.

4. 최종 결론 및 다음 단계
WhereHouse 프로젝트는 단순 추천 시스템에서 출발하여, 명확한 문제 인식과 깊이 있는 대안 설계를 통해 데이터 기반의 고도화된 추천 시스템으로 발전할 수 있는 명확한 로드맵을 갖추게 되었습니다.

종합 평가
기획: "왜, 어떻게 만들 것인가"에 대한 깊은 고민이 담긴 수준 높은 기획입니다.

기술: Elasticsearch 도입은 프로젝트의 한계를 극복하고 기술적 차별성을 확보할 최적의 선택입니다.

과제: 가장 큰 과제는 제안된 기술 스택을 성공적으로 학습하고 내재화하는 것입니다.

권장되는 다음 단계
API 명세 구체화: 제안된 /api/v2/recommendations/analyze 등 신규 API의 요청/응답 형식, 유효성 검증 규칙 등을 상세히 문서화합니다.

데이터 모델링 상세화: RDBMS 신규 테이블과 Elasticsearch 인덱스의 스키마를 구체적으로 설계합니다.

Task 분해 및 실행: 2주 로드맵을 기반으로 "Docker 환경 설정" 등 작은 단위로 업무를 나누어 1단계 목표인 데이터 파이프라인 구축부터 시작합니다.