// R-06: 점수 계산 결과
package com.wherehouse.logger.result.R06;

import lombok.Data;
import lombok.Builder;

/**
 * R-06 단계 전체 결과를 담는 메인 DTO
 *
 * R-05에서 통합된 데이터를 기반으로 안전성 점수와 편의성 점수를 계산하고,
 * 두 점수를 평균하여 종합 점수를 산출한 결과를 기록한다.
 *
 * 처리 흐름:
 * 1. 안전성 점수 계산 (calculateSafetyScore)
 *    - 파출소 거리 점수 (30%)
 *    - CCTV 점수 (40%)
 *    - 검거율 점수 (30%)
 *
 * 2. 편의성 점수 계산 (calculateConvenienceScore)
 *    - 15개 카테고리별 점수 계산
 *    - 카테고리별 가중치 적용
 *    - 평균 점수 산출
 *
 * 3. 종합 점수 계산
 *    - (안전성 점수 + 편의성 점수) / 2
 *
 * 설계 목적:
 * - 사용자에게 제공할 최종 점수 계산
 * - 각 점수 구성 요소 추적
 * - 점수 계산 로직 검증
 */
@Data
@Builder
public class R06ScoreResult {

    // ============================================
    // 안전성 점수
    // ============================================

    /**
     * 안전성 점수 계산 결과
     *
     * 포함 정보:
     * - 파출소 거리 점수 및 실제 거리
     * - CCTV 점수 및 개수
     * - 검거율 점수 및 실제 검거율
     * - 각 요소별 가중치 (0.3, 0.4, 0.3)
     * - 최종 안전성 점수 (0-100)
     */
    private R06SafetyScoreResult safetyScore;

    // ============================================
    // 편의성 점수
    // ============================================

    /**
     * 편의성 점수 계산 결과
     *
     * 포함 정보:
     * - 카테고리별 개별 점수 (15개)
     * - 카테고리명 매핑
     * - 현재 구 정보 및 인구수
     * - 최종 편의성 점수 (0-100)
     */
    private R06ConvenienceScoreResult convenienceScore;

    // ============================================
    // 종합 점수
    // ============================================

    /**
     * 종합 점수 (0-100)
     *
     * 계산: (safetyScore.finalScore + convenienceScore.finalScore) / 2
     *
     * 예시: 70.67
     *
     * 안전성과 편의성을 동일 비중(50:50)으로 평가
     *
     * 이 점수가 사용자에게 최종적으로 표시되는 점수임
     */
    private double overallScore;

    // ============================================
    // 실행 상태
    // ============================================

    /**
     * R-06 단계 전체 성공 여부
     * - true: 모든 점수 계산 정상 완료
     * - false: 치명적 오류 발생
     */
    private boolean isSuccess;

    /**
     * 에러 메시지 (실패 시에만 값 존재)
     */
    private String errorMessage;
}